<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yameokja.mc.IStoreMainDAO">
	<select id="searchStoreInfo" resultType="com.yameokja.mc.StoreDTO">
		SELECT ST_NUM, ST_NAME
		FROM STORE_VIEW
		WHERE USER_NUM = #{user_num}
		ORDER BY REG_DATE DESC
	</select>
	
	<select id="searchRepStore" resultType="java.lang.Integer">
		SELECT ST_NUM
		FROM REP_STORE
		WHERE USER_NUM = #{user_num}
	</select>
	
	<select id="star_transition" resultType="java.util.HashMap">
		SELECT TO_CHAR(TRUNC(REG_DATE, 'Q')) AS QUARTER_START_DATE, AVG(STAR_SCORE) AS AVERAGE_STAR_SCORE
		FROM RV_BOX
		WHERE ST_NUM = #{st.num}
		GROUP BY TRUNC(REG_DATE, 'Q')
		ORDER BY TRUNC(REG_DATE, 'Q')
	</select>
	
	<select id="rv_key_sum" resultType="java.util.HashMap">
		SELECT RK.COUNT AS COUNT_RV_KEY, RKL.RV_KEY_NAME AS RV_KEY_NAME
		FROM RV_KEY_LABEL RKL LEFT JOIN RV_KEY RK
		                   ON RKL.RV_KEY_NUM = RK.RV_KEY_NUM
		                   LEFT JOIN ST_LIST SL
		                       ON RK.ST_NUM = SL.ST_NUM
		WHERE SL.ST_NUM = #{st_num} OR SL.ST_NUM IS NULL
		ORDER BY RK.COUNT DESC
	</select>
	
	<select id="rv_list" resultType="com.yameokja.mc.ReviewDTO">
		<!-- SELECT UU.USER_NICKNAME AS USER_NICKNAME, RB.RV_CONTENT AS RV_CONTENT, RB.REG_DATE AS REG_DATE, RB.RV_NUM AS RV_NUM
		FROM RV_BOX RB LEFT JOIN USING_USER UU
		ON RB.USER_NUM = UU.USER_NUM
		WHERE RB.ST_NUM = #{st_num}
		ORDER BY RV_NUM DESC -->
		SELECT UU.USER_NICKNAME AS USER_NICKNAME, RB.RV_CONTENT AS RV_CONTENT
		    , RB.REG_DATE AS REG_DATE, RB.RV_NUM AS RV_NUM
		    , RR.REPLY_CONTENT AS REPLY_CONTENT
		FROM RV_BOX RB 
		LEFT JOIN USING_USER UU ON RB.USER_NUM = UU.USER_NUM
		LEFT JOIN RV_REPLY RR ON RB.RV_NUM = RR.RV_NUM
		WHERE RB.ST_NUM = #{st_num}
		ORDER BY RV_NUM DESC
	</select>
	
	<!-- 리뷰 답글 insert -->
	<insert id="reviewReply">
		INSERT INTO RV_REPLY(REPLY_NUM, RV_NUM, REPLY_CONTENT, REG_DATE)
		VALUES ((SELECT NVL(MAX(REPLY_NUM), 0) + 1 FROM RV_REPLY)
		    	,#{rv_num}, #{reply_content}, SYSDATE)
	</insert>
	
	<!-- 가게가 선택할 수 있는 음식 카테고리 -->
	<select id="foodLabel" resultType="com.yameokja.mc.FoodLabelDTO">
		SELECT FOOD_NUM, FOOD_NAME
		FROM FOOD_LABEL
	</select>
	
	<!-- 가게가 선택할 수 있는 결제 카테고리 -->
	<select id="payLabel" resultType="com.yameokja.mc.PayLabelDTO">
		SELECT PAY_NUM, PAY_NAME
		FROM PAY_LABEL
	</select>
	
	<!-- 요일 라벨 가져오는 카테고리 -->
	<select id="weekDayLabel" resultType="com.yameokja.mc.StoreOpencloseDTO">
		SELECT DAY_NAME, DAY_NUM
		FROM WEEKDAY_LABEL
		ORDER BY DAY_NUM
	</select>
	
	<!-- 평일 주말 라벨 -->
	<select id="weekWeekendDayLabel" resultType="com.yameokja.mc.weekWeekendDayLabel">
		SELECT WEEK_WEEKEND, WEEK_WEEKEND_NUM
		FROM WEEK_WEEKEND_LABEL
		ORDER BY WEEK_WEEKEND_NUM
	</select>

	<!-- 가게 체크박스 라벨 -->
	<select id="chBoxLabel" resultType="com.yameokja.mc.ChboxDTO">
		SELECT CHBOX_NUM, CHBOX_NAME
		FROM CHBOX_LABEL
	</select>
	

	<delete id="stOCdelete">
		DELTE
		FROM ST_OPENCLOSE
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="stOCinsert">
		INSERT INTO ST_OPENCLOSE(ST_NUM, DAY_NUM, START_TIME, END_TIME)
		VALUES(#{st_num}, #{day_num}, #{start_time, jdbcType=VARCHAR}, #{end_time, jdbcType=VARCHAR})
	</insert>
	
	<delete id="bOCdelete">
		DELTE
		FROM BREAKTIME
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="bOCinsert">
		INSERT INTO BREAKTIME(BREAKTIME_NUM, ST_NUM, WEEK_WEEKEND_NUM, START_BREAKTIME, END_BREAKTIME)
		VALUES(BREAKTIMESEQ.NEXTVAL, #{st_num}, #{week_weekend_num}
		, #{start_breaktime, jdbcType=VARCHAR}, #{end_breaktime, jdbcType=VARCHAR})
	</insert>
	
	<delete id="holidaydelete">
		DELTE
		FROM ST_HOLIDAY
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="holidayinsert">
		INSERT INTO ST_HOLIDAY(HOLIDAY_NUM, DAY_NUM, ST_NUM)
		VALUES(HOLIDAYSEQ.NEXTVAL, #{day_num}, #{st_num})
	</insert>
	
	<delete id="paysdelete">
		DELTE
		FROM ST_PAY
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="paysinsert">
		INSERT INTO ST_PAY(ST_PAY_NUM, PAY_NUM, ST_NUM)
		VALUES(PAYSEQ.NEXTVAL, #{pay_num}, #{st_num})
	</insert>
	
	<delete id="chBoxdelete">
		DELETE
		FROM ST_CHBOX
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="chBoxinsert">
		INSERT INTO ST_CHBOX(ST_CHBOX_NUM, ST_NUM, CHBOX_NUM, YN_NUM)
		VALUES(CHBOXSEQ.NEXTVAL, #{st_num}, #{chbox_num}, #{yn_num})
	</insert>
	
	<delete id="stKeysdelete">
		DELETE
		FROM ST_KEY
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="stKeysinsert">
		INSERT INTO ST_KEY(ST_CHOSEN_KEY_NUM, ST_NUM, ST_KEY_NUM)
		VALUES(STKEYSEQ.NEXTVAL, #{st_num}, #{st_key_num})
	</insert>
	
	<delete id="foodCatdelete">
		DELETE
		FROM ST_FOOD
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="foodCatinsert">
		INSERT INTO ST_FOOD(ST_FOOD_NUM, FOOD_NUM, ST_NUM)
		VALUES(STFOODSEQ.NEXTVAL, #{food_num}, #{st_num})
	</insert>
	
	<delete id="menudelete">
		DELETE
		FROM MENU
		WHERE ST_NUM = #{st_num}
	</delete>
	<insert id="menuinsert">
		INSERT INTO MENU(MENU_NUM, ST_NUM, MENU_NAME, PRICE, IMAGE_LINK)
		VALUES(MENUSEQ.NEXTVAL, #{st_num}, #{menu_name}, #{price}, #{image_link, jdbcType=VARCHAR})
	</insert>
	
	<delete id="stsearchKey"></delete>


	<!-- 댓글 테이블에 리뷰번호 알아내기 -->
	<select id="">
		
	</select>
</mapper>





                           


