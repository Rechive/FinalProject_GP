<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yameokja.mc.IstDetailDAO_userView">
 	<!-- 가게이름, 좋아요수, 평점, 리뷰수, 주소, 전화번호, 가게 이메일, 가게 설명
     , 최대인원수, 가게음식카테고리 -->
 	<select id="store" resultType="com.yameokja.mc.StoreDetailDTO">
 		SELECT ST_NUM, ST_NAME, ST_LOCATION, ST_TEL, ST_EXPLAIN, MAX_CUSTOMERS
		, ST_EMAIL, FOOD_NAME, PHOTO_LINK, STAR_AVG, RV_COUNT, USER_NUM
		FROM STORE_VIEW
		WHERE ST_NUM = #{st_num}	
 	</select>

 	<!-- 가게 찜 수 -->
 	<select id="clikeNum" resultType="java.lang.Integer"> 
 		SELECT COUNT(*) AS LIKE_COUNT
		FROM LIKE_BOX
		WHERE ST_NUM = #{st_num}
 	</select>
 	 	 	
 	<!-- 가게 키워드 -->
 	<select id="stKeys" resultType="com.yameokja.mc.StoreKeyDTO">
 		SELECT SK.ST_KEY_NUM AS ST_KEY_NUM
		     , SKL.ST_KEYWORD AS ST_KEYWORD
		FROM ST_KEY SK LEFT JOIN ST_KEY_LABEL SKL
		  ON SK.ST_KEY_NUM = SKL.ST_KEY_NUM
		WHERE SK.ST_NUM = #{st_num}
 	</select>
 	
 	<!-- 영업시간 가지고 오는 쿼리문 : 요일, 시작시간, 끝시간, 휴무여부 -->
 	<select id="openClose" resultType="com.yameokja.mc.StoreOpencloseDTO">
	 	SELECT W.DAY_NUM AS DAY_NUM, W.DAY_NAME AS DAY_NAME, S.ST_NUM AS ST_NUM, O.START_TIME||' ~ '||O.END_TIME AS OPERATE_TIME
		     , NVL2(H.HOLIDAY_NUM,'휴무', '-') AS HOLIDAY
		FROM WEEKDAY_LABEL W
		CROSS JOIN (
		    SELECT DISTINCT ST_NUM FROM ST_OPENCLOSE
		) S
		LEFT JOIN ST_OPENCLOSE O ON W.DAY_NUM = O.DAY_NUM AND S.ST_NUM = O.ST_NUM
		LEFT JOIN ST_HOLIDAY H ON W.DAY_NUM = H.DAY_NUM AND S.ST_NUM = H.ST_NUM
		WHERE S.ST_NUM = #{st_num}
		ORDER BY S.ST_NUM, W.DAY_NUM
 	</select>
 	
 	<!-- 브레이크 타임 -->
 	<select id="breakTime" resultType="com.yameokja.mc.StoreBreaktimeDTO">
 		SELECT WWL.WEEK_WEEKEND AS WEEK_WEEKEND
			, BT.START_BREAKTIME AS START_BREAKTIME
			, BT.END_BREAKTIME AS END_BREAKTIME
			, SL.ST_NUM AS ST_NUM
		FROM ST_LIST SL
		JOIN BREAKTIME BT ON SL.ST_NUM = BT.ST_NUM
		JOIN WEEK_WEEKEND_LABEL WWL ON BT.WEEK_WEEKEND_NUM = WWL.WEEK_WEEKEND_NUM
		WHERE SL.ST_NUM = #{st_num}
 	</select>
 	
 	<!-- 결제수단 -->
 	<select id="stPay" resultType="java.lang.String">
 		SELECT PL.PAY_NAME
		FROM ST_LIST SL LEFT JOIN ST_PAY SP
		  ON SL.ST_NUM = SP.ST_NUM
		JOIN PAY_LABEL PL
		  ON SP.PAY_NUM = PL.PAY_NUM
		WHERE SL.ST_NUM = #{st_num}
 	</select>
 	
 	<!-- 체크박스 -->
 	<select id="stcheck" resultType="com.yameokja.mc.StoreCheckDTO">
 		SELECT CL2.CHBOX_NAME AS CHBOX_NAME
		     , CASE T.YN_NUM WHEN 1 THEN '○'
		                     WHEN 2 THEN 'Ⅹ'
		                     ELSE '-'
		       END AS YESORNO
		FROM
		(
		SELECT CL.CHBOX_NUM AS CHBOX_NUM, CL.CHBOX_NAME AS CHBOX_NAME, SC.YN_NUM AS YN_NUM
		FROM CHBOX_LABEL CL LEFT JOIN ST_CHBOX SC
		  ON CL.CHBOX_NUM = SC.CHBOX_NUM
		WHERE ST_NUM = #{st_num}
		) T
		RIGHT JOIN CHBOX_LABEL CL2
		ON CL2.CHBOX_NUM = T.CHBOX_NUM
		ORDER BY CL2.CHBOX_NUM
 	</select>
 	
 	<!-- 메뉴 및 가격 가져오기-->
 	<select id="menuLists" resultType="com.yameokja.mc.StoreMenuDTO">
 		SELECT MENU_NUM, MENU_NAME, PRICE, IMAGE_LINK
		FROM MENU
		WHERE ST_NUM = #{st_num}
 	</select>

 	<!-- 리뷰 + 추천 비추천 가져오기 -->
 	<select id="reviews" resultType="com.yameokja.mc.StoreReviewDTO">
		SELECT T.RV_NUM AS RV_NUM, UU.USER_NICKNAME AS USER_NICKNAME,T.REC AS REC, T.NONREC AS NONREC
		     , T.RV_CONTENT AS RV_CONTENT, T.STAR_SCORE AS STAR_SCORE, T.REG_DATE AS REG_DATE
		FROM
		(                          
		SELECT RB.RV_NUM AS RV_NUM, NVL(RNR.REC, 0) AS REC, NVL(RNR.NONREC, 0) AS NONREC
		     , RB.USER_NUM AS USER_NUM, RB.RV_CONTENT AS RV_CONTENT, RB.STAR_SCORE AS STAR_SCORE
		     , RB.REG_DATE AS REG_DATE, RB.ST_NUM AS ST_NUM
		FROM RV_BOX RB
		LEFT JOIN                           
		(
		SELECT RRN.RV_NUM AS RV_NUM
		     , SUM(CASE WHEN RN.REC_NONREC_NAME = '추천' THEN 1 ELSE 0 END) AS REC
		     , SUM(CASE WHEN RN.REC_NONREC_NAME = '비추천' THEN 1 ELSE 0 END) AS NONREC
		FROM RV_REC_NONREC RRN LEFT JOIN REC_NONREC RN
		ON RRN.REC_NONREC_NUMBER = RN.REC_NONREC_NUMBER
		GROUP BY RRN.RV_NUM
		) RNR
		ON RB.RV_NUM = RNR.RV_NUM
		WHERE RB.RV_NUM NOT IN (SELECT RV_NUM
                                FROM REP_APPLY)
		) T
		LEFT JOIN USING_USER UU
		ON T.USER_NUM = UU.USER_NUM
		WHERE T.ST_NUM = #{st_num}
	</select>

	<!-- 리뷰 사진 -->
	<select id="rvPhoto" resultType="com.yameokja.mc.StoreRvPhotoDTO">
		SELECT RB.RV_NUM AS RV_NUM, RP.PHOTO_LINK AS PHOTO_LINK
		FROM RV_BOX RB JOIN RV_PHOTO RP
		  ON RB.RV_NUM = RP.RV_NUM
		WHERE RB.ST_NUM = #{st_num}
	</select>
	
 	<!-- 리뷰 키워드 -->
 	<select id="reviewKeys" resultType = "com.yameokja.mc.StoreReviewKeyDTO">
 		SELECT T.RV_KEY_NAME AS RV_KEY_NAME, T.RV_KEY_COUNT AS RV_KEY_COUNT
		FROM
		(
		SELECT RKL.RV_KEY_NAME AS RV_KEY_NAME
		     , COUNT(RKL.RV_KEY_NUM) AS RV_KEY_COUNT
		FROM RV_KEY_LABEL RKL RIGHT JOIN (SELECT RK.RV_NUM AS RV_NUM, RK.RV_KEY_NUM AS RV_KEY_NUM
		                                 FROM RV_BOX RB LEFT JOIN RV_KEY RK
		                                   ON RB.RV_NUM = RK.RV_NUM
		                                 WHERE RB.ST_NUM = #{st_num}) T
		  ON RKL.RV_KEY_NUM = T.RV_KEY_NUM
		WHERE RKL.RV_KEY_NAME IS NOT NULL
		GROUP BY (RKL.RV_KEY_NAME, RKL.RV_KEY_NUM)
		ORDER BY RV_KEY_COUNT
		) T
		<![CDATA[WHERE ROWNUM <= 10]]>
 	</select>
  	
<!--
	리뷰 등록
 	<insert id="reviewInsert">
 		INSERT INTO RV_BOX(RVBOXSEQ.NEXTVAL, USER_NUM, ST_NUM, RV_CONTENT, STAR_SCORE, REG_DATE)
		VALUES(#{user_num}, #{st_num}, #{rv_content}, #{star_score}, DEFAULT)
 	</insert>
-->

 	<!-- 리뷰 신고 -->
	<insert id="reviewRepInsert">
		INSERT INTO REP_APPLY(REP_APPLY_NUM, RV_NUM, USER_NUM, REP_RS_NUM)
		VALUES (12, #{rv_num}, #{user_num}, #{rep_rs_num})
	</insert> 
</mapper>